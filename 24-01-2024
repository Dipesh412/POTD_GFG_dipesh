void dfs(int start,vector<int>&ls,vector<int> adj[],int arr[]){
        
        arr[start] = 1;
        ls.push_back(start);
        for( auto neigh: adj[start]){
            if(!arr[neigh]){
                dfs(neigh,ls,adj,arr);
            }
        }
    }
  
    int isTree(int n, int m, vector<vector<int>> &adj) {
        
        if(n != m+1) return 0;
        vector<int> ad[n];
        for(auto itr:adj){
            ad[itr[0]].push_back(itr[1]);
            ad[itr[1]].push_back(itr[0]);
        }
        
        vector<int> ls;
        int arr[n] = {0};
        dfs(0,ls,ad,arr);
        for(int i = 0;i<n;i++){
            if(arr[i] == 0) return 0;
        }
        return 1;
       
    }
